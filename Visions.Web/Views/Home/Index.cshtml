@model IEnumerable<Visions.Web.Models.ArticleViewModel>
@{
    ViewBag.Title = Resources.Constants.HomepageGetStartedButtonText;
}

<header>
    <div class="header-content container">
        <div class="header-content-inner">
            <h1 id="homeHeading">visions.</h1>
            <hr>

            @if (this.User.Identity.IsAuthenticated)
            {
                <h3>@Resources.Constants.PostArticleTitle</h3>

                <form id="createArticleForm" action="" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <div class="form-group">
                            <input id="articleTitle" type="text" name="articleTitle" class="form-control article-field" placeholder="@Resources.Constants.ArticleTitlePlaceholderMessage" />
                        </div>

                        <div class="form-group">
                            <input id="articleContent" type="text" name="articleContent" class="form-control article-field" placeholder="@Resources.Constants.ArticleContentPlaceholderMessage" />
                        </div>

                    </div>

                    <div class="form-group">
                        <input type="submit" value=@Resources.Constants.PostArticleButtonText class="btn btn-default btn-post-article article-field" />
                    </div>
                </form>

                @Html.Partial("_AllArticles", this.Model)
            }
            else
            {
                <p>
                    @Resources.Constants.HomepageMainText
                    <br />
                    @Resources.Constants.HomepageSecondaryText
                </p>
                @Html.ActionLink(Resources.Constants.HomepageGetStartedButtonText, "Login", "Account", new {}, new { @class="btn btn-primary btn-xl" })
            }
        </div>
    </div>
</header>

@section Scripts {
    <script>
        const ArticleFieldMinLength = 2;

        $("#createArticleForm").validate({
            rules: {
                articleTitle: {
                    required: true,
                    minlength: ArticleFieldMinLength
                },
                articleContent: {
                    required: true,
                    minlength: ArticleFieldMinLength
                }
            }
        });

        $.validator.messages.required = @Resources.Constants.ArticleFiledRequiredValidationMessage;
        $.validator.messages.minlength = "@Resources.Constants.ArticleFieldMinLengthValidationMessage;
    </script>
}